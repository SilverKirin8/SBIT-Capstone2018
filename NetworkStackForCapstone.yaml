AWSTemplateFormatVersion: 2010-09-09
Description: >
  This template will build the networking environment for my Capstone 2018
  project. This environment includes a VPC,  two private Subnets spanning two
  Availability Zones, one public Subnets (possibly two spanning the same two 
  Availability Zones), a NetworkACL for each Subnet, Route Tables for each
  subnet, an Internet Gateway for the  public Subnet(s), and a NAT Gateway for
  the private Subnets.

  -To Do-     (at some point...) Three Route Tables - One for each subnet NAT
  Gateway

  => May add second public subnet at later date => Security Groups will be made
  with each instance
Parameters:
  VpcCidrBlock:
    Type: String
    Default: 10.0.0.0/16
    Description: Cidr Block to be used for VPC. Default is 10.0.0.0/16
  PubSub1CidrBlock:
    Type: String
    Default: 10.0.0.0/23
    Description: >-
      Cidr Block to be used for Private Subnet 1 (located in PrimaryAZ). Default
      is 10.0.0.0/23
  PrivSub1CidrBlock:
    Type: String
    Default: 10.0.2.0/23
    Description: >-
      Cidr Block to be used for Private Subnet 1 (located in PrimaryAZ). Default
      is 10.0.2.0/23
  PrivSub2CidrBlock:
    Type: String
    Default: 10.0.4.0/23
    Description: >-
      Cidr Block to be used for Private Subnet 2 (located in SecondaryAZ).
      Default is 10.0.4.0/23
  PrimaryAZ:
    Type: String
    Default: us-east-2a
    Description: >-
      Primary Availability Zone in the VPC. (If there is only one public subnet,
      it will be located in this AZ.)
  SecondaryAZ:
    Type: String
    Default: us-east-2b
    Description: Secondary Availability Zone in the VPC.
Resources:
  Vpc:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: !Ref VpcCidrBlock
      EnableDnsSupport: true
      EnableDnsHostnames: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: CapstoneVPC
  InternetGW:
    Type: 'AWS::EC2::InternetGateway'
    Properties:
      Tags:
        - Key: Name
          Value: InternetGW
  AttachInternetGWtoVpc:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      InternetGatewayId: !Ref InternetGW
      VpcId: !Ref Vpc
  PrivSub1:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: !Ref PrimaryAZ
      CidrBlock: !Ref PrivSub1CidrBlock
      Tags:
        - Key: Name
          Value: PrivateSubnet1
      VpcId: !Ref Vpc
  PrivSub2:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: !Ref SecondaryAZ
      CidrBlock: !Ref PrivSub2CidrBlock
      Tags:
        - Key: Name
          Value: PrivateSubnet2
      VpcId: !Ref Vpc
  PubSub1:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: !Ref PrimaryAZ
      CidrBlock: !Ref PubSub1CidrBlock
      Tags:
        - Key: Name
          Value: PublicSubnet1
      VpcId: !Ref Vpc
  PrivSub1NACL:
    Type: 'AWS::EC2::NetworkAcl'
    Properties:
      Tags:
        - Key: Name
          Value: Private Subnet 1 Network ACL
      VpcId: !Ref Vpc
  AssociatePrivSub1toPrivSub1NACL:
    Type: 'AWS::EC2::SubnetNetworkAclAssociation'
    Properties:
      SubnetId: !Ref PrivSub1
      NetworkAclId: !Ref PrivSub1NACL
  AllowPrivSub1ToPrivSub2:
    Type: 'AWS::EC2::NetworkAclEntry'
    Properties:
      CidrBlock: !Ref PrivSub2CidrBlock
      Egress: true
      NetworkAclId: !Ref PrivSub1NACL
      Protocol: -1
      RuleAction: allow
      RuleNumber: 100
  AllowPrivSub1ToPubSub1:
    Type: 'AWS::EC2::NetworkAclEntry'
    Properties:
      CidrBlock: !Ref PubSub1CidrBlock
      Egress: true
      NetworkAclId: !Ref PrivSub1NACL
      Protocol: -1
      RuleAction: allow
      RuleNumber: 200
  AllowPrivSub1FromPrivSub2:
    Type: 'AWS::EC2::NetworkAclEntry'
    Properties:
      CidrBlock: !Ref PrivSub2CidrBlock
      Egress: false
      NetworkAclId: !Ref PrivSub1NACL
      Protocol: -1
      RuleAction: allow
      RuleNumber: 100
  AllowPrivSub1FromPubSub1:
    Type: 'AWS::EC2::NetworkAclEntry'
    Properties:
      CidrBlock: !Ref PubSub1CidrBlock
      Egress: false
      NetworkAclId: !Ref PrivSub1NACL
      Protocol: -1
      RuleAction: allow
      RuleNumber: 200
  PrivSub2NACL:
    Type: 'AWS::EC2::NetworkAcl'
    Properties:
      Tags:
        - Key: Name
          Value: Private Subnet 2 Network ACL
      VpcId: !Ref Vpc
  AssociatePrivSub2toPrivSub2NACL:
    Type: 'AWS::EC2::SubnetNetworkAclAssociation'
    Properties:
      SubnetId: !Ref PrivSub2
      NetworkAclId: !Ref PrivSub2NACL
  AllowPrivSub2ToPrivSub1:
    Type: 'AWS::EC2::NetworkAclEntry'
    Properties:
      CidrBlock: !Ref PrivSub1CidrBlock
      Egress: true
      NetworkAclId: !Ref PrivSub2NACL
      Protocol: -1
      RuleAction: allow
      RuleNumber: 100
  AllowPrivSub2ToPubSub1:
    Type: 'AWS::EC2::NetworkAclEntry'
    Properties:
      CidrBlock: !Ref PubSub1CidrBlock
      Egress: true
      NetworkAclId: !Ref PrivSub2NACL
      Protocol: -1
      RuleAction: allow
      RuleNumber: 200
  AllowPrivSub2FromPrivSub1:
    Type: 'AWS::EC2::NetworkAclEntry'
    Properties:
      CidrBlock: !Ref PrivSub1CidrBlock
      Egress: false
      NetworkAclId: !Ref PrivSub2NACL
      Protocol: -1
      RuleAction: allow
      RuleNumber: 100
  AllowPrivSub2FromPubSub1:
    Type: 'AWS::EC2::NetworkAclEntry'
    Properties:
      CidrBlock: !Ref PubSub1CidrBlock
      Egress: false
      NetworkAclId: !Ref PrivSub2NACL
      Protocol: -1
      RuleAction: allow
      RuleNumber: 200
  PubSub1NACL:
    Type: 'AWS::EC2::NetworkAcl'
    Properties:
      Tags:
        - Key: Name
          Value: Public Subnet 1 Network ACL
      VpcId: !Ref Vpc
  AssociatePubSub1toPubSub1NACL:
    Type: 'AWS::EC2::SubnetNetworkAclAssociation'
    Properties:
      SubnetId: !Ref PubSub1
      NetworkAclId: !Ref PubSub1NACL
  AllowPubSub1ToPrivSub2:
    Type: 'AWS::EC2::NetworkAclEntry'
    Properties:
      CidrBlock: !Ref PrivSub2CidrBlock
      Egress: true
      NetworkAclId: !Ref PubSub1NACL
      Protocol: -1
      RuleAction: allow
      RuleNumber: 100
  AllowPubSub1ToPrivSub1:
    Type: 'AWS::EC2::NetworkAclEntry'
    Properties:
      CidrBlock: !Ref PrivSub1CidrBlock
      Egress: true
      NetworkAclId: !Ref PubSub1NACL
      Protocol: -1
      RuleAction: allow
      RuleNumber: 200
  AllowPubSub1FromPrivSub2:
    Type: 'AWS::EC2::NetworkAclEntry'
    Properties:
      CidrBlock: !Ref PrivSub2CidrBlock
      Egress: false
      NetworkAclId: !Ref PubSub1NACL
      Protocol: -1
      RuleAction: allow
      RuleNumber: 100
  AllowPubSub1FromPrivSub1:
    Type: 'AWS::EC2::NetworkAclEntry'
    Properties:
      CidrBlock: !Ref PubSub1CidrBlock
      Egress: false
      NetworkAclId: !Ref PubSub1NACL
      Protocol: -1
      RuleAction: allow
      RuleNumber: 200
  PubSub1RouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref Vpc
      Tags:
        - Key: Name
          Value: Private Subnet 1 Route Table
  AssociatePubSub1toPubSub1RouteTable:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref PubSub1RouteTable
      SubnetId: !Ref PubSub1
  PubSub1DefRoute:
    Type: 'AWS::EC2::Route'
    DependsOn: AttachInternetGWtoVpc
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGW
      RouteTableId: !Ref PubSub1RouteTable
Outputs:
  VPCID:
    Description: 'The ID of the VPC object created in "Resources".'
    Value: !Ref Vpc
    Export:
      Name: !Sub "${AWS::StackName}-VPCID"
  VpcCidr:
    Description: 'The CIDR block assigned to the VPC.'
    Value: !Ref VpcCidrBlock
    Export:
      Name: !Sub "${AWS::StackName}-VpcCidr"
  PubSub1ID:
    Description: 'The ID of Public Subnet 1.'
    Value: !Ref PubSub1
    Export:
      Name: !Sub "${AWS::StackName}-PubSub1Id"
  PubSub1CidrBlock:
    Description: 'The CIDR block assigned to Public Subnet 1.'
    Value: !Ref PubSub1CidrBlock
    Export:
      Name: !Sub "${AWS::StackName}-PubSub1Cidr"
  PrivSub1ID:
    Description: 'The ID of Private Subnet 1.'
    Value: !Ref PrivSub1
    Export:
      Name: !Sub "${AWS::StackName}-PrivSub1Id"
  PrivSub1CidrBlock:
    Description: 'The CIDR block assigned to Private Subnet 1.'
    Value: !Ref PrivSub1CidrBlock
    Export:
      Name: !Sub "${AWS::StackName}-PrivSub1Cidr"
  PrivSub2ID:
    Description: 'The ID of Private Subnet 2.'
    Value: !Ref PrivSub2
    Export:
      Name: !Sub "${AWS::StackName}-PrivSub2Id"
  PrivSub2CidrBlock:
    Description: 'The CIDR block assigned to Private Subnet 2.'
    Value: !Ref PrivSub2CidrBlock
    Export:
      Name: !Sub "${AWS::StackName}-PrivSub2Cidr"